 ####### This script will simply inform the windows team about the disbaled AD objects have been sitting inactive from last 90 days#######
#Variables
#$user, $env = 'cloud_win_api_svc',  "kronosclouddev"
$user, $env = 'cloud_win_api_svc', "kronoscloud"
$inactiveuserspath = "C:\temp\inactive_Users_90days.csv"
$smtpServer="koss01-oss01-mta01-app.int.oss.mykronos.com"
$from="KCH Windows Team<kchwindows@mykronos.com>"
$CC= "pushparanjan.karn@ukg.com"
$communication = "kchwindowsteam@ukg.com","securitymonitoring@ukg.com"
#$communication = "pushparanjan.karn@ukg.com"
#$emailrecipients= "kchwindowsteam@ukg.com","kronoscloud@service-now.com"
#$emailrecipients= "kronoscloud@service-now.com"
#$emailrecipients= "kronosclouddev@service-now.com"
$snowemail = "kronoscloud@service-now.com","securitymonitoring@ukg.com","kchwindowsteam@ukg.com"
#$snowemail = "kronosclouddev@service-now.com"
$CC= "pushparanjan.karn@ukg.com"
$NOW = get-date
$LOG_DIRECTORY = "C:\scripts\logs\"
$LOG = $LOG_DIRECTORY + "disable_ad_users_" + $NOW.ToString("yyyy-MM-dd_HH-mm-ss") + ".log"

$emailbody = "
Hi There, 
<p>Attached is the list of AD users have been disabled from the AD as they have been not used from last 90 days. <br> 
<p>These Disabled users have been moved to inactive containers or OU. <br> 
<p>Route it to cloud.windows queue <br>

<br>
<p><br>Regards, <br>
</P>Cloud Windows Team"

$ticketbody = "
Hi Team, 
<p>There was some issues with disability of the account in in subject line. <br> 
<p>Please check it manually. <br> 
<p>Route this ticket to cloud.windows queue. <br>

<br>
<p><br>Regards, <br>
</P>Cloud Windows Team"


$base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(("{0}:{1}" -f $user, $pass)))
$headers = New-Object "System.Collections.Generic.Dictionary[[String],[String]]"
$headers.Add('Authorization',('Basic {0}' -f $base64AuthInfo))
$headers.Add('Accept','application/json')
$headers.Add('Content-Type','application/json')


function createinc(){
    $short_desc = "Disabled AD accounts inactive for more than 90 days"
    $description = "Disabled AD accounts inactive for more than 90 days"
    #$body = "{`"short_description`":`"$short_desc`",`"description`":`"$description`",`"assignment_group`":`"Cloud.Windows`",`"contact_type`":`"Case`",`"category`":`"Application`",`"subcategory`":`"KPS - Custom Executables`",`"u_product`":`"WFC`"}"
	$body = "{`"short_description`":`"$short_desc`",`"description`":`"$description`",`"assignment_group`":`"Cloud.Windows`",`"contact_type`":`"Case`",`"category`":`"OSS`",`"assigned_to`":`"Pushpa Ranjan Karn`",`"cmdb_ci`":`"Cloud Placeholder`",`"subcategory`":`"Infrastructure Directory Service`",`"u_product`":`"WFR-Infrastructure`"}"
    $uri = "https://"+ $env + ".service-now.com/api/now/table/incident?sysparm_display_value=true"
	$method = "post"
	$response = Invoke-RestMethod -Headers $headers -ContentType "application/json" -Method $method -Uri $uri -Body $body
	#$sys_id = $response.result.sys_id
	#Write-Host "$sys_id"
    return $response.result.number
}



function updateincattchmt(){
    $subject = "RE: $incident - Disabled AD accounts inactive for more than 90 days"
    $emailbody = "Please find the inactive users for more than 90 days in the attachment. All these users have been disabled in AD."
    Send-MailMessage -to $snowemail -Cc $CC -smtpserver $smtpServer -Attachments $inactiveuserspath -Priority  "Normal" -from $from -subject "$subject" -body $emailbody -bodyasHTML;
}



function readinc(){
	$uri = "https://"+ $env + ".service-now.com/api/now/table/incident?sysparm_query=number%3D" + $incident + "&sysparm_display_value=true&sysparm_limit=1"
	$method = "get"
	$response = Invoke-RestMethod -Headers $headers -ContentType "application/json" -Method $method -Uri $uri 
	#$response.result
	$sys_id = $response.result.sys_id
	return $sys_id	
}


function closeinc(){
	$inc_sys_id = readinc
	$uri = "https://" + $env + ".service-now.com/api/now/table/incident/" + $inc_sys_id
	$method = "patch"
	$body = "{`"work_notes: `":`"The users in the attached sheet have been disabled`",`"state`":`"6`",`"close_code`":`"Resolved`",`"close_notes`":`"The users in the attached sheet have been disabled.`"}"
	$response = Invoke-RestMethod -Headers $headers -Method $method -Uri $uri -Body $body
	#$response.result
}

function validateandmail(){
    $emailbody = "
    Hi All, 
    <p>The users sitting idle for more than 90 days inactive state have been disabled in AD.<br> 
    <p>A ticket $incident has already been raised against this and closed as well.<br> 
    <p>Please log a ticket to Windows Team in case of issues.<br>
    <br>
    <p><br>Regards, <br>
    </P>Cloud Windows Team"
    Send-MailMessage -to $communication -Cc $CC -smtpserver $smtpServer -Priority  "Normal" -from $from -subject "AD Users inactive for 90 days Disabled" -body $emailbody -bodyasHTML;

}

#Get Inactive Accounts
function get_inactive_user(){
    $InactiveDays = 90
    $Days = (Get-Date).Adddays(-($InactiveDays))
    $users=Get-ADUser -Filter {LastLogonTimeStamp -lt $Days -and enabled -eq $true} -SearchBase 'OU=Employees,OU=UserAccounts,DC=WIN,DC=mykronos,DC=com' -Properties LastLogonTimeStamp,description |select-object Name,samaccountname,description,@{Name="Last Login Date"; Expression={[DateTime]::FromFileTime($_.lastLogonTimestamp).ToString('MM-dd-yyyy')}} |  export-csv $inactiveuserspath -notypeinformation
    notepad $inactiveuserspath
}

#Disabled the account and moves to Inactive OU
function disableaccount(){
    # Import the users from the csv and process it i.e. Disable and move
    $adUsers = Import-Csv -Path "$inactiveuserspath"
    $TargetOU = "OU=User_Objects,OU=Inactive_Accounts,DC=WIN,DC=mykronos,DC=com" # OU where the Disbaled users will be moved as a dead for another 90 days.
    Foreach($adUser in $adUsers) {
        # Get ad user
        $samaccountname = $adUser.samaccountname
        echo $samaccountname
        $description = $adUser.description
        echo $description
        write-host "Disabled AD user" $aduser
        Disable-ADAccount -Identity $samaccountname
        if($?){
            Set-ADUser -Identity $samaccountname -description "$incident - Disabled due to inactivity || $description"
            Write-Host "$incident - Disabled due to inactivity || $description"
            #Move user to target OU
            Get-ADUser -Identity $samaccountname| Move-ADObject  -TargetPath $TargetOU 
        }
        else{
            Write-Host "Cannot disable the AD account $samaccountname"
            Send-MailMessage -to $snowemail -Cc $CC -smtpserver $smtpServer -Priority  "Normal" -from $from -subject "Cannot disable the AD account $samaccountname" -body $ticketbody -bodyasHTML;
        }

    } 

}


#Main Proggie
function execute(){
    $pass =  D:\users\PK32064\Desktop\code.ps1
    $incident = createinc #Creates an Incident
    #incident = "INC5084544"
    echo $incident
    #get_inactive_user     # Get thethe users sitting idlefor more than 90 days
    updateincattchmt      #Update the disabled users list to ticket
    disableaccount        #Disable the USer and update the description one by one and move to Inactive OU
    validateandmail       #Send Communication Email
    closeinc              #Close the incident
}

Start-Transcript -Path $LOG -NoClobber
execute
Stop-Transcript   

#get_inactive_user


    
    
    
